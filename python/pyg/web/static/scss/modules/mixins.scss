// =============================================================================
// https://gist.github.com/jonathantneal/d0460e5c2d5d7f9bc5e6
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
        $index: str-index($string, $search);

        @if $index {
                @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
        }

        @return $string;
}

// =============================================================================
// Font Face
// https://gist.github.com/jonathantneal/d0460e5c2d5d7f9bc5e6 
// =============================================================================
@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
        $src: null;

        $extmods: (
                eot: "?",
                svg: "#" + str-replace($name, " ", "_")
        );

        $formats: (
                otf: "opentype",
                ttf: "truetype"
        );

        @each $ext in $exts {
                $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
                $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
                $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
        }

        @font-face {
                font-family: quote($name);
                font-style: $style;
                font-weight: $weight;
                src: $src;
        }
}

// =============================================================================
// Vertically align anything
// http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/
// =============================================================================
@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

@mixin vertical-align-noheader($position: relative) {
  position: $position;
  top:calc(50% - 60px);
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}


// =============================================================================
// Transition
// https://responsivedesign.is/articles/helpful-sass-mixins/
// =============================================================================
@mixin transition($what: all, $time: 0.6s, $how: ease-out) {
    -webkit-transition: $what $time $how;
    -moz-transition:    $what $time $how;
    -ms-transition:     $what $time $how;
    -o-transition:      $what $time $how;
    transition:         $what $time $how;
}

// =============================================================================
// Breakpoints
// https://responsivedesign.is/articles/helpful-sass-mixins/
// =============================================================================
 @mixin breakpoint($point) {
   @if $point == desktop {
     @media (min-width: 1120px) { @content ; }
  }
   @else if $point == laptop {
     @media (min-width: 1024px) { @content ; }
  }
    @else if $point == tablet {
     @media (min-width: 601px) { @content ; }
  }
  @else if $point == mobile {
     @media (max-width: 600px)  { @content ; }
  }
  @else if $point == smallmobile {
     @media (max-width: 320px)  { @content ; }
  }
}
// =============================================================================
// Clear Floats
// https://responsivedesign.is/articles/helpful-sass-mixins/
// =============================================================================
@mixin clearit {
     &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
    zoom: 1;
}
// --------------------------------------------------
// Flexbox SASS mixins
// The spec: http://www.w3.org/TR/css3-flexbox
// --------------------------------------------------

// Flexbox display
@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($values) {
  -webkit-box-flex: $values;
     -moz-box-flex: $values;
      -webkit-flex: $values;
          -ms-flex: $values;
              flex: $values;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
  -webkit-flex-direction: $direction;
     -moz-flex-direction: $direction;
      -ms-flex-direction: $direction;
          flex-direction: $direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
     -moz-flex-wrap: $wrap;
      -ms-flex-wrap: $wrap;
          flex-wrap: $wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
  -webkit-flex-flow: $flow;
     -moz-flex-flow: $flow;
      -ms-flex-flow: $flow;
          flex-flow: $flow;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val) {
  -webkit-box-ordinal-group: $val;  
     -moz-box-ordinal-group: $val;     
             -ms-flex-order: $val;     
              -webkit-order: $val;  
                      order: $val;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow) {
  -webkit-flex-grow: $grow;
     -moz-flex-grow: $grow;
      -ms-flex-grow: $grow;
          flex-grow: $grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number> 
@mixin flex-shrink($shrink) {
  -webkit-flex-shrink: $shrink;
     -moz-flex-shrink: $shrink;
      -ms-flex-shrink: $shrink;
          flex-shrink: $shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width> 
@mixin flex-basis($width) {
  -webkit-flex-basis: $width;
     -moz-flex-basis: $width;
      -ms-flex-basis: $width;
          flex-basis: $width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around 
@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
     -moz-justify-content: $justify;
      -ms-justify-content: $justify;
          justify-content: $justify;
            -ms-flex-pack: $justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch 
@mixin align-content($align) {
  -webkit-align-content: $align;
     -moz-align-content: $align;
      -ms-align-content: $align;
          align-content: $align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch 
@mixin align-items($align) {
  -webkit-align-items: $align;
     -moz-align-items: $align;
      -ms-align-items: $align;
       -ms-flex-align: $align;
          align-items: $align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch 
@mixin align-self($align) {
  -webkit-align-self: $align;
     -moz-align-self: $align;
      -ms-align-self: $align;
          align-self: $align;
}

// EDIT STYLE
@mixin inputeditstylelight(){
        font-size:28px;
        font-family:alphaHeadline;
        padding: 15px 2% 10px;
        text-align:center;
        color:$white;
        border:1px solid transparent;
        transition:all 0.5s ease;
        &:hover{
             cursor: url('/static/img/icon-edit.png'), auto;
             border:1px dotted $white;   
        }
}
@mixin inputeditstyledark(){
        font-size:28px;
        font-family:alphaHeadline;
        padding: 15px 15px 10px;
        color:$dkpurple;
        border:1px solid transparent;
        transition:all 0.5s ease;
        &:hover{
             cursor: url('/static/img/icon-edit.png'), auto;
             border:1px dotted $dkpurple;   
        }
}